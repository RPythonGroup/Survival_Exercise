---
title: "Survival Analysis with the deidentified Thyroid Cancer Dataset"
description: "익명화된 자료로 연습하기"
author: "RPythonStudyGroup feat. ChatGPT"
date: "2025-02-03"
date-modified: "2025-02-17"
categories:
  - R
  - Survival
  - hands-on
---

## 준비하기

### git clone

-   원격저장소 HTTP url: https://github.com/RPythonGroup/Survival_Exercise.git
-   터미널에서 git clone 시 현재 디렉토리 하부에 지정하는 디렉토리명으로 clone 됨.

``` bash
git clone https://github.com/RPythonGroup/Survival_Exercise.git R441-Survival_Exercise
```

-   RStudio 프로젝트만들기에서 기존 디렉토리에서 만들기에서 clone 된 디렉토리를 선택하면 됨.

-   

    ## 패키지관리를 renv로 할려면,

    ````         
    ```         
      renv::activate로 활성화시키고,
    ```
    ````

    -   

        ```         
          renv::snapshot 으로 renv.lock 파일의 패키지 목록을 설치하도록 옵션을 선택하시면 됨. 
        ```

    -   

        ```         
          설치가 완료되면 renv::status() 로 프로젝트에 설치된 패키지와 renv.lock 파일에 기록된 패키지 목록이 일치하는지 확인하면 됨.
        ```

### readRDS

-   R에서만 사용하는 자료형태인 RDS를 읽어오며, 자료형이 보전되고 빠름

```{r rai_recur}

library(dplyr)

rai_recur <- readRDS("deidentified_data/rai_recur.rds")
```

### mytable

-   mytable로 자료 개요 파악
-   mylatex 출력은 성공하지 못함.

```{r mytable}

library(moonBook)

# mytable(recur~.,data=rai_recur) %>% mylatex() %>% cat # 정상작동이 되지 않는 이유는?

mytable(recur~.,data=rai_recur)
```

## Surv함수

-   time과 event를 인자로 받아 특수한 형태의 matrix인 생존(survival) 객체 반환

```{r Surv}

library(survival)

rai_recur$recur <- as.integer(rai_recur$recur)
km <- Surv(rai_recur$time, event = rai_recur$recur) ## default type : "right"
# km <- Surv(time=time, event = recur, data=rai_recur) # data= 형식을 지원하지 않음

str(km)
```

```{r head}

head(km)
```

### plot

-   plot() 함수는 제네릭 함수로, 기본적으로 산점도를 그리지만, Surv 객체를 인자로 받으면 내부적으로 plot.survfit() method를 호출하여 Kaplan-Meier(KM) 곡선을 반환함
-   time의 단위가 월이라서 x 축은 400까지 표시됨

```{r plot.survfit}

plot(km) ## km - Surv class (time, status) 가지고 있는 리스트
```

-   Surv 객체는 **survfit 함수의 인자**로 사용되므로 중요

### 중앙값 생존기간

-   50%에 도달하지 못하여 NA 반환됨

```{r median}

median(km)  ## Surv 객체에 대한 method 함수들이 있다.
```

### 평균생존기간

-   데이터셋의 time 변수는 입력단위가 월이므로 재발에 소요된 평균이 약 69개월 ?

```{r mean}

mean(km)
```

## survfit

-   Surv 객체와 공변량을 formula 형태의 인자로 받아 Kaplan-Meier 또는 Cox 모델 기반 생존 확률을 저장한 객체를 반환

### Kaplan-Meier 기반

```{r plot_survfit}

plot(survfit(km~1)) #Kaplan-Meier 기반
```

### cox model 기반

```{r plot_cox}

km_fit <- survfit(km~rai_recur$sex) #cox model 기반

plot(km_fit)
```

### summary

```{r summary1}
summary(km_fit) 
```

### summary 기간지정

```{r summary2}
summary(km_fit, c(12*1:19)) ### 정해진 time에 맞는 생존테이블표를 만든다.
```

### plot 그래프 - 범례추가

```{r plot_cox2}
plot(km_fit, col = rainbow(2), lty=1:2)
legend("topright", legend = c("Female","Male"),
col= rainbow(2), lty=1:2)
```

### ggsurvplot - risk.table 추가하기

```{r ggsurvplot}

library(survminer)

ggsurvplot(
  km_fit, 
  data = rai_recur,
  conf.int = T, 
  xscale = 12, ## xscale can be "d_y"
  break.x.by = 5*12,
  pval = T, 
  pval.size =4, 
  surv.median.line = "hv",
  risk.table = TRUE, ## if TRUE, risk table is displayed under graph
  legend.title="sex", 
  legend.labs=c("Female","Male"),
  palette = c("#E7B800", "#2E9FDF"),
)
```

## coxph

### cox 단변량

$$
h(t | X) = h_0(t) \exp(\beta_1 X_1 + \beta_2 X_2 + \dots + \beta_p X_p)
$$ \#### sex에 대한 단변량

```{r univariate}

univariate_model <- coxph(km ~ sex, data = rai_recur)
summary(univariate_model)
```

#### 1️⃣ 검정 방법의 차이

-   Likelihood Ratio Test: 모델 전체의 적합도를 평가하는 강력한 검정 방법.
-   Wald Test: 개별 회귀 계수가 0과 다른지 평가하지만, 샘플 크기가 작거나 계수가 매우 크면 부정확할 수 있음.
-   Score Test: 작은 샘플에서도 안정적인 검정이지만, 일부 가정이 충족되지 않으면 결과가 다를 수 있음.

#### 2️⃣ 샘플 크기 및 데이터 특성

-   샘플 크기가 작을 때 → Wald Test는 불안정할 수 있음.
-   변수 간 다중공선성 → Wald Test와 LRT 결과가 다를 수 있음.
-   검열 데이터 비율이 높을 때 → Score Test가 다른 두 검정과 다를 수 있음.

#### **📌 (1) Likelihood Ratio Test만 유의미하고 나머지는 유의미하지 않다면?**

-   모델이 전체적으로는 의미가 있지만, 개별 변수의 효과가 강하지 않을 수 있음.\
-   Wald Test와 Score Test도 확인하면서 **개별 변수의 기여도를 분석**해야 함.

#### **📌 (2) Wald Test만 유의미하다면?**

-   특정 변수의 효과는 강하지만, 모델 전체가 데이터를 충분히 설명하지 못할 수 있음.\
-   변수 선택을 다시 검토하고 다중공선성을 점검해야 함.

#### **📌 (3) Score Test만 유의미하다면?**

-   데이터가 잘 맞지만, 특정 변수의 효과가 불확실할 가능성이 있음.\
-   모델의 구조와 데이터의 분포를 다시 확인해야 함.

### cox 단변량 반복

```{r mycph}

mycph(Surv(time, recur) ~ sex+surgeon+Risk+pT+gross_ETE+pN+ENE, data = rai_recur)

```

### Multivariate Analysis

```{r Multivariate}

cox_model1 <- coxph(Surv(time, recur) ~ sex+surgeon+Risk+pT+gross_ETE+pN+ENE, data = rai_recur)
summary(cox_model1)
```

### Multivariate - anova

-   anova(cox_model1)는 Cox 회귀 모델에서 각 변수의 기여도를 평가하는 역할을 함.
-   각 변수가 모델에 얼마나 중요한지 평가하고, p-value를 기반으로 불필요한 변수를 제거할 수 있음.
-   Deviance 값이 크고 p-value가 낮은 변수는 중요한 변수이며, p-value가 높으면 제거를 고려할 수 있음.

```{r anova}

anova(cox_model1)
```

-   Cox 회귀 모델에서는 로그 우도를 최대화(즉, 덜 음수로 만듦) 하는 방향으로 최적화를 수행
    -   NULL 모델 (loglik = -567.06) → 변수가 없는 기본 모델
    -   모델이 점점 좋아질수록 loglik 값 증가
    -   sex 추가 후: loglik = -560.92 (증가)
    -   surgeon 추가 후: loglik = -540.38 (더 증가)
    -   Risk 추가 후: loglik = -521.33 (더 증가)

### Multivariate - refit

```{r refit1}

cox_model_refit <- coxph(Surv(time, recur) ~ sex+surgeon+Risk, data = rai_recur)
summary(cox_model_refit)
```

### survfit plot

```{r plot3}

plot(survfit(cox_model1), ylim = c(0.6,1),xlab = "months",
ylab = "Proportion not reached")
```

## 잔차분석

### time histogram

```{r time_hist}

with(rai_recur, hist(time/12, breaks = 40, main = "Histogram of time"))
```

### age histogram

```{r age_hist}

with(rai_recur, hist(age, breaks = 16, main = "Histogram of age"))
```

### size histogram

```{r size_hist}

with(rai_recur, hist(size, breaks = 16, main = "Histogram of age"))
```

### age residual

```{r age_residual}

m1 <- coxph(Surv(time,recur)~1,data = rai_recur)
rai_recur$resid <- residuals(m1, type = "martingale")
rai_recur %>% ggplot(aes(age,resid))+geom_point()+geom_smooth()+theme_classic()

```

```{r age_predict}

# 25.02.17 추가
# chatGPT 답변에 따라 age를 공변량으로 한후 risk를 predict하여 그래프화

m2 <- coxph(Surv(time,recur)~age,data = rai_recur)
rai_recur$predicted_hr <- predict(m2, type = "risk")
rai_recur %>% ggplot(aes(age,predicted_hr))+geom_point()+geom_smooth()+theme_classic()

```

### size residual

```{r size_residual}

rai_recur %>% ggplot(aes(size,resid))+geom_point()+geom_smooth()+theme_classic()
```

## 연속형변수와 cox

### cox 단변량 반복2

```{r mycph_all}

mycph(Surv(time, recur) ~ age+sex+surgeon+Risk+pT+size+gross_ETE+pN+ENE, data = rai_recur)

```

### Multivariate Analysis 2

```{r Multivariate_all}

cox_model2 <- coxph(Surv(time, recur) ~ age+sex+surgeon+Risk+pT+size+gross_ETE+pN+ENE, data = rai_recur)
summary(cox_model2)
```

### Multivariate - anova 2

```{r anova2}

anova(cox_model2)
```

### Multivariate refit 2

```{r refit2}

cox_model_refit2 <- coxph(Surv(time, recur) ~ age+sex+surgeon+Risk+size+pN, data = rai_recur)
summary(cox_model_refit2)
```

```{r end}

```
